from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput
from kivy.uix.button import Button
from kivy.uix.scrollview import ScrollView
from kivy.core.window import Window
from kivy.clock import Clock
import random

class LeilaAI:
    def __init__(self):
        self.name = "–õ–µ–π–ª–∞"
        self.jokes = [
            "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã –ø—É—Ç–∞—é—Ç –•—ç–ª–ª–æ—É–∏–Ω –∏ –†–æ–∂–¥–µ—Å—Ç–≤–æ? Oct 31 == Dec 25!",
            "–ß—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –º–∞—Ç–µ–º–∞—Ç–∏–∫ –±–µ–∑ —Ç—É–∞–ª–µ—Ç–Ω–æ–π –±—É–º–∞–≥–∏? '–°–µ–π—á–∞—Å –ø–æ—Å—á–∏—Ç–∞—é...'",
            "–ü–æ—á–µ–º—É –∫—É—Ä–∏—Ü–∞ –ø–µ—Ä–µ—à–ª–∞ –¥–æ—Ä–æ–≥—É? –ß—Ç–æ–±—ã –¥–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –æ–Ω–∞ –Ω–µ –∏–Ω–¥—é–∫!",
            "–ö–∞–∫ —Ä—É—Å—Å–∫–∏–µ —á–∞—Å—ã? –°–µ–∫—É–Ω–¥–∞-—Å–µ–∫—É–Ω–¥–∞-—Å–µ–∫—É–Ω–¥–∞...",
            "–ö–æ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –¥–µ–ª–∞–µ—Ç —Ç–æ–ª—å–∫–æ Ctrl+C, Ctrl+V!",
            "–ü–æ—á–µ–º—É 6 –±–æ–∏—Ç—Å—è 7? –ü–æ—Ç–æ–º—É —á—Ç–æ 7 8 9!",
            "–°—Ç–∞–∫–∞–Ω –≤–æ–¥—ã —Å–∏–¥–µ–ª –ø–æ—Ç–æ–º—É —á—Ç–æ –±—ã–ª —Å—Ç–∞–∫–∞–Ω–æ–º!",
            "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –ª—é–±–∏—Ç Java!",
            "–ö–æ—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –ª–æ–≤–∏—Ç mouse!",
            "–ó–∞—á–µ–º AI —à—É—Ç–∏—Ç? –ß—Ç–æ–±—ã byte-—Å—å! ü§ñ"
        ]
    
    def get_response(self, user_input):
        user_input = user_input.lower()
        
        if any(word in user_input for word in ['–ø—Ä–∏–≤–µ—Ç', '—Ö–∞–π']):
            return f"–ü—Ä–∏–≤–µ—Ç! –Ø {self.name} - —Ç–≤–æ–π —à—É—Ç–Ω–∏–∫! üòÑ"
        elif any(word in user_input for word in ['—à—É—Ç–∫–∞', '–ø–æ—à—É—Ç–∏']):
            return random.choice(self.jokes)
        elif any(word in user_input for word in ['–∫–∞–∫ –¥–µ–ª–∞']):
            return "–û—Ç–ª–∏—á–Ω–æ! –ì–æ—Ç–æ–≤–∞ —à—É—Ç–∏—Ç—å! üé≠"
        elif any(word in user_input for word in ['–∏–º—è']):
            return f"–Ø {self.name}! AI —Å —é–º–æ—Ä–æ–º! ü§°"
        elif any(word in user_input for word in ['–ø–æ–∫–∞']):
            return "–ü–æ–∫–∞! –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –∑–∞ —à—É—Ç–∫–∞–º–∏! üëã"
        else:
            return f"{random.choice(['–•–º...', '–û–∫–µ–π,', '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ!'])} {random.choice(self.jokes)}"

class LeilaApp(App):
    def build(self):
        self.leila = LeilaAI()
        self.title = "–õ–µ–π–ª–∞ AI –®—É—Ç–Ω–∏–∫"
        
        # –ì–ª–∞–≤–Ω—ã–π layout
        layout = BoxLayout(orientation='vertical', padding=10, spacing=10)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = Label(
            text="üé≠ –õ–µ–π–ª–∞ - AI –®—É—Ç–Ω–∏–∫ üé≠",
            size_hint_y=0.1,
            color=(0.9, 0.1, 0.5, 1),
            font_size='20sp',
            bold=True
        )
        layout.add_widget(title)
        
        # –ß–∞—Ç
        self.chat_area = ScrollView(size_hint_y=0.7)
        self.chat_layout = BoxLayout(orientation='vertical', size_hint_y=None, spacing=5)
        self.chat_layout.bind(minimum_height=self.chat_layout.setter('height'))
        self.chat_area.add_widget(self.chat_layout)
        layout.add_widget(self.chat_area)
        
        # –í–≤–æ–¥
        input_layout = BoxLayout(size_hint_y=0.15, spacing=10)
        self.input = TextInput(
            hint_text="–ù–∞–ø–∏—à–∏—Ç–µ –õ–µ–π–ª–µ...",
            size_hint_x=0.7,
            multiline=False
        )
        self.input.bind(on_text_validate=self.send_message)
        
        send_btn = Button(
            text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å",
            size_hint_x=0.3,
            background_color=(0.9, 0.1, 0.5, 1)
        )
        send_btn.bind(on_press=self.send_message)
        
        input_layout.add_widget(self.input)
        input_layout.add_widget(send_btn)
        layout.add_widget(input_layout)
        
        # –ë—ã—Å—Ç—Ä—ã–µ –∫–Ω–æ–ø–∫–∏
        btn_layout = BoxLayout(size_hint_y=0.05, spacing=5)
        joke_btn = Button(text="üé≠ –®—É—Ç–∫–∞", background_color=(0, 0.5, 1, 1))
        clear_btn = Button(text="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å", background_color=(1, 0.3, 0.3, 1))
        
        joke_btn.bind(on_press=self.quick_joke)
        clear_btn.bind(on_press=self.clear_chat)
        
        btn_layout.add_widget(joke_btn)
        btn_layout.add_widget(clear_btn)
        layout.add_widget(btn_layout)
        
        self.add_message("–ü—Ä–∏–≤–µ—Ç! –Ø –õ–µ–π–ª–∞! –ù–∞–ø–∏—à–∏ –º–Ω–µ –∏–ª–∏ –Ω–∞–∂–º–∏ '–®—É—Ç–∫–∞'! üòä", False)
        return layout
    
    def add_message(self, text, is_user):
        msg_color = (0, 0.5, 1, 1) if is_user else (0.9, 0.1, 0.5, 1)
        prefix = "–í—ã: " if is_user else "–õ–µ–π–ª–∞: "
        
        msg = Label(
            text=f"{prefix}{text}",
            text_size=(Window.width * 0.9, None),
            halign='left',
            valign='middle',
            color=msg_color,
            size_hint_y=None,
            height=80
        )
        self.chat_layout.add_widget(msg)
        Clock.schedule_once(lambda dt: setattr(self.chat_area, 'scroll_y', 0))
    
    def send_message(self, instance):
        text = self.input.text.strip()
        if text:
            self.add_message(text, True)
            self.input.text = ""
            Clock.schedule_once(lambda dt: self.get_response(text), 0.3)
    
    def get_response(self, text):
        response = self.leila.get_response(text)
        self.add_message(response, False)
    
    def quick_joke(self, instance):
        self.add_message("–®—É—Ç–∫–∞!", True)
        Clock.schedule_once(lambda dt: self.get_response("—à—É—Ç–∫–∞"), 0.3)
    
    def clear_chat(self, instance):
        self.chat_layout.clear_widgets()
        self.add_message("–ß–∞—Ç –æ—á–∏—â–µ–Ω! –ü—Ä–∏–≤–µ—Ç! üòä", False)

if __name__ == "__main__":
    LeilaApp().run()